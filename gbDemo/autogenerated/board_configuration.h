// autogenerated: do not add any changes
#ifndef board_configuration_h
#define board_configuration_h
#include "configuration.h"
namespace gb
{
class board_configuration : public configuration
{
public:
board_configuration(void) = default;
~board_configuration(void) = default;
std::string get_cell_configuration_filename(void) const;
#if defined(__IS_CONFIGURATION_MUTABLE__)
void set_cell_configuration_filename(std::string cell_configuration_filename);
#endif
std::string get_element_configuration_filename(void) const;
#if defined(__IS_CONFIGURATION_MUTABLE__)
void set_element_configuration_filename(std::string element_configuration_filename);
#endif
i32 get_cols(void) const;
#if defined(__IS_CONFIGURATION_MUTABLE__)
void set_cols(i32 cols);
#endif
i32 get_rows(void) const;
#if defined(__IS_CONFIGURATION_MUTABLE__)
void set_rows(i32 rows);
#endif
bool get_red(void) const;
#if defined(__IS_CONFIGURATION_MUTABLE__)
void set_red(bool red);
#endif
bool get_green(void) const;
#if defined(__IS_CONFIGURATION_MUTABLE__)
void set_green(bool green);
#endif
bool get_blue(void) const;
#if defined(__IS_CONFIGURATION_MUTABLE__)
void set_blue(bool blue);
#endif
bool get_yellow(void) const;
#if defined(__IS_CONFIGURATION_MUTABLE__)
void set_yellow(bool yellow);
#endif
void serialize_xml(const std::string& filename);
void serialize_json(const std::string& filename);
};
};
#endif
