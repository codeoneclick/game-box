// autogenerated: do not add any changes
#ifndef level_configuration_h
#define level_configuration_h
#include "configuration.h"
namespace gb
{
class level_configuration : public configuration
{
public:
level_configuration(void) = default;
~level_configuration(void) = default;
std::string get_visual_configuration_filename(void) const;
#if defined(__IS_CONFIGURATION_MUTABLE__)
void set_visual_configuration_filename(std::string visual_configuration_filename);
#endif
i32 get_level_width(void) const;
#if defined(__IS_CONFIGURATION_MUTABLE__)
void set_level_width(i32 level_width);
#endif
i32 get_level_height(void) const;
#if defined(__IS_CONFIGURATION_MUTABLE__)
void set_level_height(i32 level_height);
#endif
i32 get_level_cell_width(void) const;
#if defined(__IS_CONFIGURATION_MUTABLE__)
void set_level_cell_width(i32 level_cell_width);
#endif
i32 get_level_cell_height(void) const;
#if defined(__IS_CONFIGURATION_MUTABLE__)
void set_level_cell_height(i32 level_cell_height);
#endif
void serialize_xml(const std::string& filename);
void serialize_json(const std::string& filename);
};
};
#endif
