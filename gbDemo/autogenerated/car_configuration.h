// autogenerated: do not add any changes
#ifndef car_configuration_h
#define car_configuration_h
#include "configuration.h"
namespace gb
{
class car_configuration : public configuration
{
public:
car_configuration(void) = default;
~car_configuration(void) = default;
std::string get_main_3d_configuration_filename(void) const;
#if defined(__IS_CONFIGURATION_MUTABLE__)
void set_main_3d_configuration_filename(std::string main_3d_configuration_filename);
#endif
std::string get_detail_3d_configuration_filename(void) const;
#if defined(__IS_CONFIGURATION_MUTABLE__)
void set_detail_3d_configuration_filename(std::string detail_3d_configuration_filename);
#endif
std::string get_wheel_l_3d_configuration_filename(void) const;
#if defined(__IS_CONFIGURATION_MUTABLE__)
void set_wheel_l_3d_configuration_filename(std::string wheel_l_3d_configuration_filename);
#endif
std::string get_wheel_r_3d_configuration_filename(void) const;
#if defined(__IS_CONFIGURATION_MUTABLE__)
void set_wheel_r_3d_configuration_filename(std::string wheel_r_3d_configuration_filename);
#endif
std::string get_skin_1_filename(void) const;
#if defined(__IS_CONFIGURATION_MUTABLE__)
void set_skin_1_filename(std::string skin_1_filename);
#endif
std::string get_skin_2_filename(void) const;
#if defined(__IS_CONFIGURATION_MUTABLE__)
void set_skin_2_filename(std::string skin_2_filename);
#endif
std::string get_skin_3_filename(void) const;
#if defined(__IS_CONFIGURATION_MUTABLE__)
void set_skin_3_filename(std::string skin_3_filename);
#endif
f32 get_fl_wheel_offset_x(void) const;
#if defined(__IS_CONFIGURATION_MUTABLE__)
void set_fl_wheel_offset_x(f32 fl_wheel_offset_x);
#endif
f32 get_fl_wheel_offset_y(void) const;
#if defined(__IS_CONFIGURATION_MUTABLE__)
void set_fl_wheel_offset_y(f32 fl_wheel_offset_y);
#endif
f32 get_fl_wheel_offset_z(void) const;
#if defined(__IS_CONFIGURATION_MUTABLE__)
void set_fl_wheel_offset_z(f32 fl_wheel_offset_z);
#endif
f32 get_fr_wheel_offset_x(void) const;
#if defined(__IS_CONFIGURATION_MUTABLE__)
void set_fr_wheel_offset_x(f32 fr_wheel_offset_x);
#endif
f32 get_fr_wheel_offset_y(void) const;
#if defined(__IS_CONFIGURATION_MUTABLE__)
void set_fr_wheel_offset_y(f32 fr_wheel_offset_y);
#endif
f32 get_fr_wheel_offset_z(void) const;
#if defined(__IS_CONFIGURATION_MUTABLE__)
void set_fr_wheel_offset_z(f32 fr_wheel_offset_z);
#endif
f32 get_rl_wheel_offset_x(void) const;
#if defined(__IS_CONFIGURATION_MUTABLE__)
void set_rl_wheel_offset_x(f32 rl_wheel_offset_x);
#endif
f32 get_rl_wheel_offset_y(void) const;
#if defined(__IS_CONFIGURATION_MUTABLE__)
void set_rl_wheel_offset_y(f32 rl_wheel_offset_y);
#endif
f32 get_rl_wheel_offset_z(void) const;
#if defined(__IS_CONFIGURATION_MUTABLE__)
void set_rl_wheel_offset_z(f32 rl_wheel_offset_z);
#endif
f32 get_rr_wheel_offset_x(void) const;
#if defined(__IS_CONFIGURATION_MUTABLE__)
void set_rr_wheel_offset_x(f32 rr_wheel_offset_x);
#endif
f32 get_rr_wheel_offset_y(void) const;
#if defined(__IS_CONFIGURATION_MUTABLE__)
void set_rr_wheel_offset_y(f32 rr_wheel_offset_y);
#endif
f32 get_rr_wheel_offset_z(void) const;
#if defined(__IS_CONFIGURATION_MUTABLE__)
void set_rr_wheel_offset_z(f32 rr_wheel_offset_z);
#endif
f32 get_fl_light_offset_x(void) const;
#if defined(__IS_CONFIGURATION_MUTABLE__)
void set_fl_light_offset_x(f32 fl_light_offset_x);
#endif
f32 get_fl_light_offset_y(void) const;
#if defined(__IS_CONFIGURATION_MUTABLE__)
void set_fl_light_offset_y(f32 fl_light_offset_y);
#endif
f32 get_fl_light_offset_z(void) const;
#if defined(__IS_CONFIGURATION_MUTABLE__)
void set_fl_light_offset_z(f32 fl_light_offset_z);
#endif
f32 get_fr_light_offset_x(void) const;
#if defined(__IS_CONFIGURATION_MUTABLE__)
void set_fr_light_offset_x(f32 fr_light_offset_x);
#endif
f32 get_fr_light_offset_y(void) const;
#if defined(__IS_CONFIGURATION_MUTABLE__)
void set_fr_light_offset_y(f32 fr_light_offset_y);
#endif
f32 get_fr_light_offset_z(void) const;
#if defined(__IS_CONFIGURATION_MUTABLE__)
void set_fr_light_offset_z(f32 fr_light_offset_z);
#endif
f32 get_rl_light_offset_x(void) const;
#if defined(__IS_CONFIGURATION_MUTABLE__)
void set_rl_light_offset_x(f32 rl_light_offset_x);
#endif
f32 get_rl_light_offset_y(void) const;
#if defined(__IS_CONFIGURATION_MUTABLE__)
void set_rl_light_offset_y(f32 rl_light_offset_y);
#endif
f32 get_rl_light_offset_z(void) const;
#if defined(__IS_CONFIGURATION_MUTABLE__)
void set_rl_light_offset_z(f32 rl_light_offset_z);
#endif
f32 get_rr_light_offset_x(void) const;
#if defined(__IS_CONFIGURATION_MUTABLE__)
void set_rr_light_offset_x(f32 rr_light_offset_x);
#endif
f32 get_rr_light_offset_y(void) const;
#if defined(__IS_CONFIGURATION_MUTABLE__)
void set_rr_light_offset_y(f32 rr_light_offset_y);
#endif
f32 get_rr_light_offset_z(void) const;
#if defined(__IS_CONFIGURATION_MUTABLE__)
void set_rr_light_offset_z(f32 rr_light_offset_z);
#endif
f32 get_f_wheels_scale(void) const;
#if defined(__IS_CONFIGURATION_MUTABLE__)
void set_f_wheels_scale(f32 f_wheels_scale);
#endif
f32 get_r_wheels_scale(void) const;
#if defined(__IS_CONFIGURATION_MUTABLE__)
void set_r_wheels_scale(f32 r_wheels_scale);
#endif
void serialize_xml(const std::string& filename);
void serialize_json(const std::string& filename);
};
};
#endif
