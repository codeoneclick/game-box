// autogenerated: do not add any changes, added changes will be lost.
#ifndef gameplay_configuration_accessor_h
#define gameplay_configuration_accessor_h
#include "mob_configuration.h"
#include "level_configuration.h"
#include "npc_configuration.h"
#include "board_configuration.h"
#include "element_configuration.h"
#include "quest_task_configuration.h"
#include "character_configuration.h"
#include "cell_configuration.h"
#include "quest_configuration.h"
namespace gb
{
class gameplay_configuration_accessor
{
public:
gameplay_configuration_accessor(void) = default;
~gameplay_configuration_accessor(void) = default;
std::shared_ptr<configuration> get_mob_configuration(const std::string& filename) const;
std::shared_ptr<configuration> get_level_configuration(const std::string& filename) const;
std::shared_ptr<configuration> get_npc_configuration(const std::string& filename) const;
std::shared_ptr<configuration> get_board_configuration(const std::string& filename) const;
std::shared_ptr<configuration> get_element_configuration(const std::string& filename) const;
std::shared_ptr<configuration> get_quest_task_configuration(const std::string& filename) const;
std::shared_ptr<configuration> get_character_configuration(const std::string& filename) const;
std::shared_ptr<configuration> get_cell_configuration(const std::string& filename) const;
std::shared_ptr<configuration> get_quest_configuration(const std::string& filename) const;
};
};
#endif
