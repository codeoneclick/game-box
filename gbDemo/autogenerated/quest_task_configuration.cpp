// autogenerated: do not add any changes
#include "quest_task_configuration.h"
namespace gb
{
i32 quest_task_configuration::get_id(void) const
{
const auto& iterator = m_attributes.find("/quest_task/id");
assert(iterator != m_attributes.end());
i32 value; iterator->second->get(&value);
return value;
}
#if defined(__IS_CONFIGURATION_MUTABLE__)
void quest_task_configuration::set_id(i32 id)
{
configuration::set_attribute("/quest_task/id", std::make_shared<configuration_attribute>(id));
}
#endif
i32 quest_task_configuration::get_type(void) const
{
const auto& iterator = m_attributes.find("/quest_task/type");
assert(iterator != m_attributes.end());
i32 value; iterator->second->get(&value);
return value;
}
#if defined(__IS_CONFIGURATION_MUTABLE__)
void quest_task_configuration::set_type(i32 type)
{
configuration::set_attribute("/quest_task/type", std::make_shared<configuration_attribute>(type));
}
#endif
i32 quest_task_configuration::get_goal_id(void) const
{
const auto& iterator = m_attributes.find("/quest_task/goal_id");
assert(iterator != m_attributes.end());
i32 value; iterator->second->get(&value);
return value;
}
#if defined(__IS_CONFIGURATION_MUTABLE__)
void quest_task_configuration::set_goal_id(i32 goal_id)
{
configuration::set_attribute("/quest_task/goal_id", std::make_shared<configuration_attribute>(goal_id));
}
#endif
i32 quest_task_configuration::get_goal_count(void) const
{
const auto& iterator = m_attributes.find("/quest_task/goal_count");
assert(iterator != m_attributes.end());
i32 value; iterator->second->get(&value);
return value;
}
#if defined(__IS_CONFIGURATION_MUTABLE__)
void quest_task_configuration::set_goal_count(i32 goal_count)
{
configuration::set_attribute("/quest_task/goal_count", std::make_shared<configuration_attribute>(goal_count));
}
#endif
i32 quest_task_configuration::get_goal_time(void) const
{
const auto& iterator = m_attributes.find("/quest_task/goal_time");
assert(iterator != m_attributes.end());
i32 value; iterator->second->get(&value);
return value;
}
#if defined(__IS_CONFIGURATION_MUTABLE__)
void quest_task_configuration::set_goal_time(i32 goal_time)
{
configuration::set_attribute("/quest_task/goal_time", std::make_shared<configuration_attribute>(goal_time));
}
#endif
void quest_task_configuration::serialize_xml(const std::string& filename)
{
pugi::xml_document document;
pugi::xml_parse_result result = configuration::open_xml(document, filename);
assert(result.status == pugi::status_ok);
pugi::xpath_node node;
node = document.select_single_node("/quest_task");
i32 id = node.node().attribute("id").as_int();
configuration::set_attribute("/quest_task/id", std::make_shared<configuration_attribute>(id));
i32 type = node.node().attribute("type").as_int();
configuration::set_attribute("/quest_task/type", std::make_shared<configuration_attribute>(type));
i32 goal_id = node.node().attribute("goal_id").as_int();
configuration::set_attribute("/quest_task/goal_id", std::make_shared<configuration_attribute>(goal_id));
i32 goal_count = node.node().attribute("goal_count").as_int();
configuration::set_attribute("/quest_task/goal_count", std::make_shared<configuration_attribute>(goal_count));
i32 goal_time = node.node().attribute("goal_time").as_int();
configuration::set_attribute("/quest_task/goal_time", std::make_shared<configuration_attribute>(goal_time));
}
void quest_task_configuration::serialize_json(const std::string& filename)
{
Json::Value json;
bool result = configuration::open_json(json, filename);
assert(result);
i32 id = json.get("id", 0).asInt();
configuration::set_attribute("/quest_task/id", std::make_shared<configuration_attribute>(id));
i32 type = json.get("type", 0).asInt();
configuration::set_attribute("/quest_task/type", std::make_shared<configuration_attribute>(type));
i32 goal_id = json.get("goal_id", 0).asInt();
configuration::set_attribute("/quest_task/goal_id", std::make_shared<configuration_attribute>(goal_id));
i32 goal_count = json.get("goal_count", 0).asInt();
configuration::set_attribute("/quest_task/goal_count", std::make_shared<configuration_attribute>(goal_count));
i32 goal_time = json.get("goal_time", 0).asInt();
configuration::set_attribute("/quest_task/goal_time", std::make_shared<configuration_attribute>(goal_time));
}
}
