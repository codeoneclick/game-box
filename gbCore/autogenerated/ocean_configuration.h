// autogenerated: do not add any changes
#ifndef ocean_configuration_h
#define ocean_configuration_h
#include "configuration.h"
#include "material_configuration.h"
namespace gb
{
class ocean_configuration : public game_object_configuration
{
public:
ocean_configuration(void) = default;
~ocean_configuration(void) = default;
i32 get_size(void) const;
#if defined(__EDITOR__)
void set_size(i32 size);
#endif
f32 get_altitude(void) const;
#if defined(__EDITOR__)
void set_altitude(f32 altitude);
#endif
f32 get_wave_generation_interval(void) const;
#if defined(__EDITOR__)
void set_wave_generation_interval(f32 wave_generation_interval);
#endif
std::vector<std::shared_ptr<configuration>> get_materials_configurations(void) const;
#if defined(__EDITOR__)
void add_materials_configurations(const std::shared_ptr<gb::material_configuration>& material);
#endif
#if defined(__EDITOR__)
void set_materials_configurations(const std::shared_ptr<gb::material_configuration>& material, i32 index);
#endif
void serialize(const std::string& filename);
#if defined(__EDITOR__)
void deserialize(const std::string& filename);
#endif
};
};
#endif
