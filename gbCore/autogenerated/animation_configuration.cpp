// autogenerated: do not add any changes
#include "animation_configuration.h"
namespace gb
{
std::string animation_configuration::get_animation_filename(void) const
{
const auto& iterator = m_attributes.find("/animation/filename");
assert(iterator != m_attributes.end());
std::string value; iterator->second->get(&value);
return value;
}
#if defined(__EDITOR__)
void animation_configuration::set_animation_filename(std::string filename)
{
configuration::set_attribute("/animation/filename", std::make_shared<configuration_attribute>(filename));
}
#endif
std::string animation_configuration::get_animation_name(void) const
{
const auto& iterator = m_attributes.find("/animation/name");
assert(iterator != m_attributes.end());
std::string value; iterator->second->get(&value);
return value;
}
#if defined(__EDITOR__)
void animation_configuration::set_animation_name(std::string name)
{
configuration::set_attribute("/animation/name", std::make_shared<configuration_attribute>(name));
}
#endif
void animation_configuration::serialize(pugi::xml_document& document, const std::string& path)
{
pugi::xpath_node node;
node = document.select_single_node((path + "/animation").c_str());
std::string filename = node.node().attribute("filename").as_string();
configuration::set_attribute("/animation/filename", std::make_shared<configuration_attribute>(filename));
std::string name = node.node().attribute("name").as_string();
configuration::set_attribute("/animation/name", std::make_shared<configuration_attribute>(name));
}
#if defined(__EDITOR__)
void animation_configuration::deserialize(pugi::xml_node& node)
{
pugi::xml_attribute attribute;
attribute = node.append_attribute("filename");
std::string filename = animation_configuration::get_animation_filename();
attribute.set_value(filename.c_str());
attribute = node.append_attribute("name");
std::string name = animation_configuration::get_animation_name();
attribute.set_value(name.c_str());
}
#endif
void animation_configuration::serialize(pugi::xml_document& document, pugi::xpath_node& node)
{
std::string filename = node.node().attribute("filename").as_string();
configuration::set_attribute("/animation/filename", std::make_shared<configuration_attribute>(filename));
std::string name = node.node().attribute("name").as_string();
configuration::set_attribute("/animation/name", std::make_shared<configuration_attribute>(name));
}
}
