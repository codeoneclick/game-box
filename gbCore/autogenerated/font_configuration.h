// autogenerated: do not add any changes
#ifndef font_configuration_h
#define font_configuration_h
#include "configuration.h"
#include "glyph_configuration.h"
namespace gb
{
class font_configuration : public configuration
{
public:
font_configuration(void) = default;
~font_configuration(void) = default;
i32 get_size_width(void) const;
#if defined(__IS_CONFIGURATION_MUTABLE__)
void set_size_width(i32 size_width);
#endif
i32 get_size_height(void) const;
#if defined(__IS_CONFIGURATION_MUTABLE__)
void set_size_height(i32 size_height);
#endif
std::vector<std::shared_ptr<configuration>> get_glyphs_configurations(void) const;
#if defined(__IS_CONFIGURATION_MUTABLE__)
void add_glyphs_configurations(const std::shared_ptr<gb::glyph_configuration>& glyph);
#endif
#if defined(__IS_CONFIGURATION_MUTABLE__)
void set_glyphs_configurations(const std::shared_ptr<gb::glyph_configuration>& glyph, i32 index);
#endif
void serialize_xml(const std::string& filename);
void serialize_json(const std::string& filename);
};
};
#endif
