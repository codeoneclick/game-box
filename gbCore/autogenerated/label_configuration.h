// autogenerated: do not add any changes
#ifndef label_configuration_h
#define label_configuration_h
#include "configuration.h"
#include "material_configuration.h"
#include "font_configuration.h"
namespace gb
{
class label_configuration : public game_object_configuration
{
public:
label_configuration(void) = default;
~label_configuration(void) = default;
std::vector<std::shared_ptr<configuration>> get_materials_configurations(void) const;
#if defined(__IS_CONFIGURATION_MUTABLE__)
void add_materials_configurations(const std::shared_ptr<gb::material_configuration>& material);
#endif
#if defined(__IS_CONFIGURATION_MUTABLE__)
void set_materials_configurations(const std::shared_ptr<gb::material_configuration>& material, i32 index);
#endif
std::shared_ptr<font_configuration> get_font_configuration(void) const;
#if defined(__IS_CONFIGURATION_MUTABLE__)
void set_font_configuration(const std::shared_ptr<gb::font_configuration>& font);
#endif
void serialize_xml(const std::string& filename);
void serialize_json(const std::string& filename);
};
};
#endif
