// autogenerated: do not add any changes
#ifndef blending_configuration_h
#define blending_configuration_h
#include "configuration.h"
namespace gb
{
class blending_configuration : public configuration
{
public:
blending_configuration(void) = default;
~blending_configuration(void) = default;
bool get_is_enabled(void) const;
#if defined(__IS_CONFIGURATION_MUTABLE__)
void set_is_enabled(bool is_enabled);
#endif
ui32 get_blending_function_source(void) const;
#if defined(__IS_CONFIGURATION_MUTABLE__)
void set_blending_function_source(ui32 blending_function_source);
#endif
ui32 get_blending_function_destination(void) const;
#if defined(__IS_CONFIGURATION_MUTABLE__)
void set_blending_function_destination(ui32 blending_function_destination);
#endif
ui32 get_blending_equation(void) const;
#if defined(__IS_CONFIGURATION_MUTABLE__)
void set_blending_equation(ui32 blending_equation);
#endif
ui32 get_attachment_index(void) const;
#if defined(__IS_CONFIGURATION_MUTABLE__)
void set_attachment_index(ui32 attachment_index);
#endif
void serialize_xml(pugi::xml_document& document, const std::string& path);
void serialize_json(Json::Value& root);
void serialize_xml(pugi::xml_document& document, pugi::xpath_node& node);
};
};
#endif
