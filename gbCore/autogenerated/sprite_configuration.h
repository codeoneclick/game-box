// autogenerated: do not add any changes
#ifndef sprite_configuration_h
#define sprite_configuration_h
#include "configuration.h"
#include "material_configuration.h"
namespace gb
{
class sprite_configuration : public game_object_configuration
{
public:
sprite_configuration(void) = default;
~sprite_configuration(void) = default;
std::vector<std::shared_ptr<configuration>> get_materials_configurations(void) const;
#if defined(__EDITOR__)
void add_materials_configurations(const std::shared_ptr<gb::material_configuration>& material);
#endif
#if defined(__EDITOR__)
void set_materials_configurations(const std::shared_ptr<gb::material_configuration>& material, i32 index);
#endif
void serialize(const std::string& filename);
void serialize_json(const std::string& filename);
#if defined(__EDITOR__)
void deserialize(const std::string& filename);
#endif
};
};
#endif
