// autogenerated: do not add any changes
#ifndef terrain_configuration_h
#define terrain_configuration_h
#include "configuration.h"
#include "material_configuration.h"
namespace gb
{
class terrain_configuration : public game_object_configuration
{
public:
terrain_configuration(void) = default;
~terrain_configuration(void) = default;
std::string get_terrain_data_filename(void) const;
#if defined(__EDITOR__)
void set_terrain_data_filename(std::string terrain_data_filename);
#endif
std::string get_splatting_material_filename(void) const;
#if defined(__EDITOR__)
void set_splatting_material_filename(std::string splatting_material_filename);
#endif
std::vector<std::shared_ptr<configuration>> get_materials_configurations(void) const;
#if defined(__EDITOR__)
void add_materials_configurations(const std::shared_ptr<gb::material_configuration>& material);
#endif
#if defined(__EDITOR__)
void set_materials_configurations(const std::shared_ptr<gb::material_configuration>& material, i32 index);
#endif
void serialize(const std::string& filename);
#if defined(__EDITOR__)
void deserialize(const std::string& filename);
#endif
};
};
#endif
