// autogenerated: do not add any changes
#ifndef glyph_configuration_h
#define glyph_configuration_h
#include "configuration.h"
namespace gb
{
class glyph_configuration : public configuration
{
public:
glyph_configuration(void) = default;
~glyph_configuration(void) = default;
i32 get_id(void) const;
#if defined(__IS_CONFIGURATION_MUTABLE__)
void set_id(i32 id);
#endif
i32 get_x(void) const;
#if defined(__IS_CONFIGURATION_MUTABLE__)
void set_x(i32 x);
#endif
i32 get_y(void) const;
#if defined(__IS_CONFIGURATION_MUTABLE__)
void set_y(i32 y);
#endif
i32 get_width(void) const;
#if defined(__IS_CONFIGURATION_MUTABLE__)
void set_width(i32 width);
#endif
i32 get_height(void) const;
#if defined(__IS_CONFIGURATION_MUTABLE__)
void set_height(i32 height);
#endif
f32 get_xoffset(void) const;
#if defined(__IS_CONFIGURATION_MUTABLE__)
void set_xoffset(f32 xoffset);
#endif
f32 get_yoffset(void) const;
#if defined(__IS_CONFIGURATION_MUTABLE__)
void set_yoffset(f32 yoffset);
#endif
void serialize_xml(pugi::xml_document& document, const std::string& path);
void serialize_json(Json::Value& root);
void serialize_xml(pugi::xml_document& document, pugi::xpath_node& node);
};
};
#endif
