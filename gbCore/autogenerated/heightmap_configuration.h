// autogenerated: do not add any changes
#ifndef heightmap_configuration_h
#define heightmap_configuration_h
#include "configuration.h"
#include "material_configuration.h"
namespace gb
{
class heightmap_configuration : public game_object_configuration
{
public:
heightmap_configuration(void) = default;
~heightmap_configuration(void) = default;
std::string get_heightmap_data_filename(void) const;
#if defined(__IS_CONFIGURATION_MUTABLE__)
void set_heightmap_data_filename(std::string heightmap_data_filename);
#endif
i32 get_heightmap_chunk_size_x(void) const;
#if defined(__IS_CONFIGURATION_MUTABLE__)
void set_heightmap_chunk_size_x(i32 heightmap_chunk_size_x);
#endif
i32 get_heightmap_chunk_size_y(void) const;
#if defined(__IS_CONFIGURATION_MUTABLE__)
void set_heightmap_chunk_size_y(i32 heightmap_chunk_size_y);
#endif
std::vector<std::shared_ptr<configuration>> get_materials_configurations(void) const;
#if defined(__IS_CONFIGURATION_MUTABLE__)
void add_materials_configurations(const std::shared_ptr<gb::material_configuration>& material);
#endif
#if defined(__IS_CONFIGURATION_MUTABLE__)
void set_materials_configurations(const std::shared_ptr<gb::material_configuration>& material, i32 index);
#endif
void serialize_xml(const std::string& filename);
void serialize_json(const std::string& filename);
};
};
#endif
